from imblearn.under_sampling import RandomUnderSampler
from sklearn.model_selection import train_test_split
from collections import Counter

# Séparation des données en variables d'entrée (X) et cible (y)
X = df.drop('Variable cible', axis=1)
y = df['Variable cible']

# Avant le rééquilibrage : affichage de la distribution des classes
print(f"Distribution des classes avant rééquilibrage : {Counter(y)}")

# Séparer les données en ensembles d'entraînement et de test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=y)

# Application du sous-échantillonnage avec RandomUnderSampler
rus = RandomUnderSampler(random_state=42)
X_train_resampled, y_train_resampled = rus.fit_resample(X_train, y_train)

# Après le rééquilibrage : affichage de la distribution des classes
print(f"Distribution des classes après rééquilibrage : {Counter(y_train_resampled)}")

# Vérification de la taille des ensembles de données
print(f"Taille de l'ensemble d'entraînement avant rééquilibrage : {X_train.shape}")
print(f"Taille de l'ensemble d'entraînement après rééquilibrage : {X_train_resampled.shape}")

# Continuer avec la construction du modèle en utilisant les données rééquilibrées
